using SharedKernel.SharedObjects.Paginations;
using SharedKernel.SharedObjects;
using Application.DTOs.Pessoas.Filtro;
using Application.DTOs.Pessoas.Adicionar;
using Domain.Commands.Pessoas.Adicionar;
using Application.DTOs.Pessoas.Atualizar;
using Domain.Commands.Pessoas.Atualizar;
using Domain.Commands.Pessoas.Excluir;
using Application.DTOs.Pessoas.Excluir;
using Application.DTOs.Pessoas.Regioes.Atualizar;
using Application.DTOs.Pessoas.Regioes.Adicionar;
using Application.DTOs.Pessoas.Regioes.Excluir;
using Application.DTOs.Pessoas.Origens.Adicionar;
using Application.DTOs.Pessoas.Origens.Atualizar;
using Application.DTOs.Pessoas.Origens.Excluir;
using Application.DTOs.Pessoas.SegmentoClientes.Adicionar;
using Application.DTOs.Pessoas.SegmentoClientes.Atualizar;
using Application.DTOs.Pessoas.SegmentoClientes.Excluir;
using Application.DTOs.Pessoas.SegmentoEstrategicos.Adicionar;
using Application.DTOs.Pessoas.SegmentoEstrategicos.Atualizar;
using Application.DTOs.Pessoas.SegmentoEstrategicos.Excluir;
using Application.DTOs.Pessoas.Departamentos.Adicionar;
using Application.DTOs.Pessoas.Departamentos.Atualizar;
using Application.DTOs.Pessoas.Departamentos.Excluir;
using Application.DTOs.Pessoas.Cargos.Adicionar;
using Application.DTOs.Pessoas.Cargos.Atualizar;
using Application.DTOs.Pessoas.Cargos.Excluir;
using Domain.Commands.Cargos.Adicionar;
using Domain.Commands.Cargos.Atualizar;
using Domain.Commands.Cargos.Excluir;
using Domain.Commands.Origens.Adicionar;
using Domain.Commands.Origens.Atualizar;
using Domain.Commands.Origens.Excluir;
using Domain.Commands.Regioes.Adicionar;
using Domain.Commands.Regioes.Atualizar;
using Domain.Commands.Regioes.Excluir;
using Domain.Commands.SegmentoClientes.Adicionar;
using Domain.Commands.SegmentoClientes.Atualizar;
using Domain.Commands.SegmentoClientes.Excluir;
using Domain.Commands.SegmentoEstrategicos.Adicionar;
using Domain.Commands.SegmentoEstrategicos.Atualizar;
using Domain.Commands.SegmentoEstrategicos.Excluir;
using Domain.Commands.Departamentos.Adicionar;
using Domain.Commands.Departamentos.Atualizar;
using Domain.Commands.Departamentos.Excluir;
using Application.DTOs.Pessoas.ValidarCpfsCnpjs;
using Domain.Commands.ValidarCpfCnpjs.Adicionar;
using Application.DTOs.Pessoas.TipoConsumidores.Atualizar;
using Application.DTOs.Pessoas.TipoConsumidores.Filtro;
using Domain.Commands.Pessoas.TipoConsumidores.Atualizar;

namespace Application.Interfaces.Pessoas
{
    public interface IPessoaService
    {
        Task<FormularioResponse<AdicionarPessoaCommand>> Adicionar(AdicionarPessoaRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarPessoaCommand>> Atualizar(AtualizarPessoaRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirPessoaCommand>>> Excluir(ExcluirPessoaDto dtos, CancellationToken cancellationToken);
        Task<PaginacaoResponse<PessoaFilterDto>> RetornarPaginacao(PaginacaoRequest paginacaoRequest);
        Task<PessoaByIdDto?> RetornarPorId(Guid id);
        Task<FormularioResponse<AdicionarValidarCpfCnpjCommand>> ValidarCpfCnpj(AdicionarValidarCpfCnpjRequestDto dtos, CancellationToken cancellationToken);
        Task<PadraoIdDescricaoFilterDto?> RetornarOrigemPorId(Guid id);
        Task<PadraoIdDescricaoFilterDto?> RetornarRegiaoPorId(Guid id);
        Task<PadraoIdDescricaoFilterDto?> RetornarSegmentoClientePorId(Guid id);
        Task<PadraoIdDescricaoFilterDto?> RetornarSegmentoEstrategicoPorId(Guid id);
        Task<PadraoIdDescricaoFilterDto?> RetornarDepartamentoPorId(Guid id);
        Task<PadraoIdDescricaoFilterDto?> RetornarCargoPorId(Guid id);
        Task<FormularioResponse<AdicionarOrigemCommand>> AdicionarOrigem(AdicionarOrigemRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarOrigemCommand>> AtualizarOrigem(AtualizarOrigemRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirOrigemCommand>>> ExcluirOrigem(ExcluirOrigemDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AdicionarRegiaoCommand>> AdicionarRegiao(AdicionarRegiaoRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarRegiaoCommand>> AtualizarRegiao(AtualizarRegiaoRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirRegiaoCommand>>> ExcluirRegiao(ExcluirRegiaoDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AdicionarSegmentoClienteCommand>> AdicionarSegmentoCliente(AdicionarSegmentoClienteRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarSegmentoClienteCommand>> AtualizarSegmentoCliente(AtualizarSegmentoClienteRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirSegmentoClienteCommand>>> ExcluirSegmentoCliente(ExcluirSegmentoClienteDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AdicionarSegmentoEstrategicoCommand>> AdicionarSegmentoEstrategico(AdicionarSegmentoEstrategicoRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarSegmentoEstrategicoCommand>> AtualizarSegmentoEstrategico(AtualizarSegmentoEstrategicoRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirSegmentoEstrategicoCommand>>> ExcluirSegmentoEstrategico(ExcluirSegmentoEstrategicoDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AdicionarDepartamentoCommand>> AdicionarDepartamento(AdicionarDepartamentoRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarDepartamentoCommand>> AtualizarDepartamento(AtualizarDepartamentoRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirDepartamentoCommand>>> ExcluirDepartamento(ExcluirDepartamentoDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AdicionarCargoCommand>> AdicionarCargo(AdicionarCargoRequestDto dtos, CancellationToken cancellationToken);
        Task<FormularioResponse<AtualizarCargoCommand>> AtualizarCargo(AtualizarCargoRequestDto dto, CancellationToken cancellationToken);
        Task<List<FormularioResponse<ExcluirCargoCommand>>> ExcluirCargo(ExcluirCargoDto dtos, CancellationToken cancellationToken);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarOrigemPaginacao(PaginacaoRequest paginacaoRequest);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarRegiaoPaginacao(PaginacaoRequest paginacaoRequest);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarSegmentoClientePaginacao(PaginacaoRequest paginacaoRequest);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarSegmentoEstrategicoPaginacao(PaginacaoRequest paginacaoRequest);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarDepartamentoPaginacao(PaginacaoRequest paginacaoRequest);
        Task<PaginacaoResponse<PadraoIdDescricaoFilterDto>> RetornarCargoPaginacao(PaginacaoRequest paginacaoRequest);
        Task<FormularioResponse<AtualizarTipoConsumidorCommand>> AtualizarTipoConsumidor(AtualizarTipoConsumidorRequestDto dto, CancellationToken cancellationToken);
        Task<PaginacaoResponse<TipoConsumidorFilterDto>> RetornarTipoConsumidorPaginacao(PaginacaoRequest paginacaoRequest);
        Task<TipoConsumidorByCodeDto?> RetornarTipoConsumidorPorId(Guid id);        
    }
}
